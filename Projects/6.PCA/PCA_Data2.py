{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMKQn9QEzGDThVnkkWb5Qdi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xK_cjuOjDcPS","executionInfo":{"status":"ok","timestamp":1740932772574,"user_tz":480,"elapsed":2270,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"af0eb0b5-123e-4ffc-e1c7-16cdfb38c8e5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}],"source":["import pandas as pd\n","from google.colab import drive\n","\n","drive.mount(\"/content/drive/\")\n","\n"]},{"cell_type":"code","source":["df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/Lab4/economic1.csv\")\n","df\n","\n"],"metadata":{"id":"xd3BlnZYHqyT","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1740932775597,"user_tz":480,"elapsed":1795,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"aaf0efc6-d54c-4581-97ef-8537dd113f80"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-2-c9558e0c9e42>:1: DtypeWarning: Columns (11) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/Lab4/economic1.csv\")\n"]},{"output_type":"execute_result","data":{"text/plain":["       Series_reference   Period   Data_value   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A  1989.03        14.16    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A  1989.06        14.26    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A  1989.09        14.24    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A  1989.12        14.49    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A  1990.03        14.49    FINAL  Dollars         0   \n","...                 ...      ...          ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  2023.12  75324770.00  REVISED   Number         0   \n","191974       QEMQ.SIAZT  2024.03  75247020.00  REVISED   Number         0   \n","191975       QEMQ.SIAZT  2024.06  74860090.00  REVISED   Number         0   \n","191976       QEMQ.SIAZT  2024.09  74298400.00  REVISED   Number         0   \n","191977       QEMQ.SIAZT  2024.12  74273780.00    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group  \\\n","0       Average Hourly Earnings by Industry (ANZSIC06)...   \n","1       Average Hourly Earnings by Industry (ANZSIC06)...   \n","2       Average Hourly Earnings by Industry (ANZSIC06)...   \n","3       Average Hourly Earnings by Industry (ANZSIC06)...   \n","4       Average Hourly Earnings by Industry (ANZSIC06)...   \n","...                                                   ...   \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...   \n","\n","             Series_title_1 Series_title_2        Series_title_3  \\\n","0       Forestry and Mining           Male  Ordinary Time Hourly   \n","1       Forestry and Mining           Male  Ordinary Time Hourly   \n","2       Forestry and Mining           Male  Ordinary Time Hourly   \n","3       Forestry and Mining           Male  Ordinary Time Hourly   \n","4       Forestry and Mining           Male  Ordinary Time Hourly   \n","...                     ...            ...                   ...   \n","191973     Total Paid Hours          Trend                   NaN   \n","191974     Total Paid Hours          Trend                   NaN   \n","191975     Total Paid Hours          Trend                   NaN   \n","191976     Total Paid Hours          Trend                   NaN   \n","191977     Total Paid Hours          Trend                   NaN   \n","\n","       Series_title_4  Series_title_5  \n","0                 NaN             NaN  \n","1                 NaN             NaN  \n","2                 NaN             NaN  \n","3                 NaN             NaN  \n","4                 NaN             NaN  \n","...               ...             ...  \n","191973            NaN             NaN  \n","191974            NaN             NaN  \n","191975            NaN             NaN  \n","191976            NaN             NaN  \n","191977            NaN             NaN  \n","\n","[191978 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-8b9ad98b-3a58-4072-97b8-334746306c79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series_reference</th>\n","      <th>Period</th>\n","      <th>Data_value</th>\n","      <th>STATUS</th>\n","      <th>UNITS</th>\n","      <th>MAGNTUDE</th>\n","      <th>Subject</th>\n","      <th>Group</th>\n","      <th>Series_title_1</th>\n","      <th>Series_title_2</th>\n","      <th>Series_title_3</th>\n","      <th>Series_title_4</th>\n","      <th>Series_title_5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.03</td>\n","      <td>14.16</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>Male</td>\n","      <td>Ordinary Time Hourly</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.06</td>\n","      <td>14.26</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>Male</td>\n","      <td>Ordinary Time Hourly</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.09</td>\n","      <td>14.24</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>Male</td>\n","      <td>Ordinary Time Hourly</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.12</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>Male</td>\n","      <td>Ordinary Time Hourly</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1990.03</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>Male</td>\n","      <td>Ordinary Time Hourly</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2023.12</td>\n","      <td>75324770.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>Trend</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.03</td>\n","      <td>75247020.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>Trend</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.06</td>\n","      <td>74860090.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>Trend</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.09</td>\n","      <td>74298400.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>Trend</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.12</td>\n","      <td>74273780.00</td>\n","      <td>FINAL</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>Trend</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>191978 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b9ad98b-3a58-4072-97b8-334746306c79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b9ad98b-3a58-4072-97b8-334746306c79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b9ad98b-3a58-4072-97b8-334746306c79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a146b24-bea4-4ac4-8364-4df4141c72fb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a146b24-bea4-4ac4-8364-4df4141c72fb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a146b24-bea4-4ac4-8364-4df4141c72fb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4cb43561-72a3-4246-aa0b-1532f72d2798\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4cb43561-72a3-4246-aa0b-1532f72d2798 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["#Feature Engineering"],"metadata":{"id":"zxITQsNKIXk_"}},{"cell_type":"code","source":["import numpy as np\n","\n","null_rows = df.isnull().sum()\n","print(null_rows)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e39ZiioWIDeW","executionInfo":{"status":"ok","timestamp":1740932779540,"user_tz":480,"elapsed":152,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"73f8afd8-0651-4a0a-f6da-536c5c466a1a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Series_reference         0\n","Period                   0\n","Data_value            2142\n","STATUS                   0\n","UNITS                    0\n","MAGNTUDE                 0\n","Subject                  0\n","Group                    0\n","Series_title_1           0\n","Series_title_2        4896\n","Series_title_3       16200\n","Series_title_4      190548\n","Series_title_5      191978\n","dtype: int64\n"]}]},{"cell_type":"code","source":["df = df.drop(['Series_title_2','Series_title_3','Series_title_4', 'Series_title_5'], axis=1)\n","df\n"],"metadata":{"id":"N4xrjsAdeg0s","executionInfo":{"status":"ok","timestamp":1740932782256,"user_tz":480,"elapsed":9,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"colab":{"base_uri":"https://localhost:8080/","height":597},"outputId":"f0b805ec-ca19-4491-8305-1f770ff66b0b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Series_reference   Period   Data_value   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A  1989.03        14.16    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A  1989.06        14.26    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A  1989.09        14.24    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A  1989.12        14.49    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A  1990.03        14.49    FINAL  Dollars         0   \n","...                 ...      ...          ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  2023.12  75324770.00  REVISED   Number         0   \n","191974       QEMQ.SIAZT  2024.03  75247020.00  REVISED   Number         0   \n","191975       QEMQ.SIAZT  2024.06  74860090.00  REVISED   Number         0   \n","191976       QEMQ.SIAZT  2024.09  74298400.00  REVISED   Number         0   \n","191977       QEMQ.SIAZT  2024.12  74273780.00    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group       Series_title_1  \n","0       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","1       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","2       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","3       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","4       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","...                                                   ...                  ...  \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","\n","[191978 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-895ddf4d-81a3-44a7-9527-614342a4ed14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series_reference</th>\n","      <th>Period</th>\n","      <th>Data_value</th>\n","      <th>STATUS</th>\n","      <th>UNITS</th>\n","      <th>MAGNTUDE</th>\n","      <th>Subject</th>\n","      <th>Group</th>\n","      <th>Series_title_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.03</td>\n","      <td>14.16</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.06</td>\n","      <td>14.26</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.09</td>\n","      <td>14.24</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.12</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1990.03</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2023.12</td>\n","      <td>75324770.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.03</td>\n","      <td>75247020.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.06</td>\n","      <td>74860090.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.09</td>\n","      <td>74298400.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.12</td>\n","      <td>74273780.00</td>\n","      <td>FINAL</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>191978 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-895ddf4d-81a3-44a7-9527-614342a4ed14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-895ddf4d-81a3-44a7-9527-614342a4ed14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-895ddf4d-81a3-44a7-9527-614342a4ed14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-80fe09bc-81f9-4ed6-935a-6f8530dbf361\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80fe09bc-81f9-4ed6-935a-6f8530dbf361')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-80fe09bc-81f9-4ed6-935a-6f8530dbf361 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_de4107bb-8f91-4d52-bbd8-6c8616cad6f6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_de4107bb-8f91-4d52-bbd8-6c8616cad6f6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["null_rows = df.isnull().sum()\n","print(null_rows)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XI-nhQysgUOF","executionInfo":{"status":"ok","timestamp":1740932785363,"user_tz":480,"elapsed":104,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"2d3f49b5-26aa-4aeb-9f35-c4c4fbb607ea"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Series_reference       0\n","Period                 0\n","Data_value          2142\n","STATUS                 0\n","UNITS                  0\n","MAGNTUDE               0\n","Subject                0\n","Group                  0\n","Series_title_1         0\n","dtype: int64\n","       Series_reference   Period   Data_value   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A  1989.03        14.16    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A  1989.06        14.26    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A  1989.09        14.24    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A  1989.12        14.49    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A  1990.03        14.49    FINAL  Dollars         0   \n","...                 ...      ...          ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  2023.12  75324770.00  REVISED   Number         0   \n","191974       QEMQ.SIAZT  2024.03  75247020.00  REVISED   Number         0   \n","191975       QEMQ.SIAZT  2024.06  74860090.00  REVISED   Number         0   \n","191976       QEMQ.SIAZT  2024.09  74298400.00  REVISED   Number         0   \n","191977       QEMQ.SIAZT  2024.12  74273780.00    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group       Series_title_1  \n","0       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","1       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","2       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","3       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","4       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","...                                                   ...                  ...  \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","\n","[191978 rows x 9 columns]\n"]}]},{"cell_type":"code","source":["print(\"Missing values per column:\")\n","print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mLGS8gLLSDdj","executionInfo":{"status":"ok","timestamp":1740932789152,"user_tz":480,"elapsed":19,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"bdda672e-bc09-4d56-9843-0a9634dbcfe0"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing values per column:\n","Series_reference       0\n","Period                 0\n","Data_value          2142\n","STATUS                 0\n","UNITS                  0\n","MAGNTUDE               0\n","Subject                0\n","Group                  0\n","Series_title_1         0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["df = df.dropna()"],"metadata":{"id":"zbHOSqM9hHFh","executionInfo":{"status":"ok","timestamp":1740932792343,"user_tz":480,"elapsed":10,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["print(\"Missing values per column:\")\n","print(df.isnull().sum())\n","df.head()\n","df.tail()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":788},"id":"5gjhJKDpijLA","executionInfo":{"status":"ok","timestamp":1740932793543,"user_tz":480,"elapsed":31,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"2af35510-fce2-4cf2-c5c5-b8138ac080ec"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing values per column:\n","Series_reference    0\n","Period              0\n","Data_value          0\n","STATUS              0\n","UNITS               0\n","MAGNTUDE            0\n","Subject             0\n","Group               0\n","Series_title_1      0\n","dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["       Series_reference   Period   Data_value   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A  1989.03        14.16    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A  1989.06        14.26    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A  1989.09        14.24    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A  1989.12        14.49    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A  1990.03        14.49    FINAL  Dollars         0   \n","...                 ...      ...          ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  2023.12  75324770.00  REVISED   Number         0   \n","191974       QEMQ.SIAZT  2024.03  75247020.00  REVISED   Number         0   \n","191975       QEMQ.SIAZT  2024.06  74860090.00  REVISED   Number         0   \n","191976       QEMQ.SIAZT  2024.09  74298400.00  REVISED   Number         0   \n","191977       QEMQ.SIAZT  2024.12  74273780.00    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group       Series_title_1  \n","0       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","1       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","2       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","3       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","4       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","...                                                   ...                  ...  \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","\n","[189836 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-9e210e4d-6d4c-434c-bc19-8ced0072c8b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series_reference</th>\n","      <th>Period</th>\n","      <th>Data_value</th>\n","      <th>STATUS</th>\n","      <th>UNITS</th>\n","      <th>MAGNTUDE</th>\n","      <th>Subject</th>\n","      <th>Group</th>\n","      <th>Series_title_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.03</td>\n","      <td>14.16</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.06</td>\n","      <td>14.26</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.09</td>\n","      <td>14.24</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.12</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1990.03</td>\n","      <td>14.49</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2023.12</td>\n","      <td>75324770.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.03</td>\n","      <td>75247020.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.06</td>\n","      <td>74860090.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.09</td>\n","      <td>74298400.00</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.12</td>\n","      <td>74273780.00</td>\n","      <td>FINAL</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>189836 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e210e4d-6d4c-434c-bc19-8ced0072c8b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e210e4d-6d4c-434c-bc19-8ced0072c8b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e210e4d-6d4c-434c-bc19-8ced0072c8b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1ab33599-75fd-4a1f-a340-20c880e7d657\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ab33599-75fd-4a1f-a340-20c880e7d657')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1ab33599-75fd-4a1f-a340-20c880e7d657 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e9482c87-940d-4000-ba06-dd40649cb762\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e9482c87-940d-4000-ba06-dd40649cb762 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":[],"metadata":{"id":"jycE5V1_PKz_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.decomposition import PCA\n","import seaborn as sns"],"metadata":{"id":"icgbMA32MIla","executionInfo":{"status":"ok","timestamp":1740932802694,"user_tz":480,"elapsed":1140,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["plt.scatter(df['Period'],df['Data_value'], c='red', s=2)\n","plt.xlabel(\"Time\")\n","plt.ylabel(\"Data Values\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"GWCuyaQ7JEml","executionInfo":{"status":"ok","timestamp":1740932804208,"user_tz":480,"elapsed":520,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"9f4d5c30-7eed-41da-f9e2-fe7bf735ecd7"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Data Values')"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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YzabMXfuXLRs2RLBwcH49a9/bXN8BQUFmDBhAoKCgtCmTRs8++yzsFgskn127tyJ+Ph4BAQEoFu3blizZo2rD08Xd70HO3futPkOGAwGFBUVueU47XHW8f/pT39CQkICAgIC0K9fP8XXOnz4MO655x4YjUZERETgtddec9Vh6eau4z9z5ozi579v3z5XHp4mZxz/oUOHMGXKFERERCAwMBAxMTF48803bV7Lm88Bet4DZ5wDGPTcodLSUsTGxmLFihU2jwmCgEmTJiE/Px9ff/01Dhw4gE6dOmH06NEoLS2tzj927FgYDAakpaVhz549uHXrFu6//35UVVVVP9cjjzyCY8eOYdu2bdi8eTN27dqFP/zhD247TnvcdfwA8OKLL6KwsLD69sc//tEtx6gmPT0dc+fOxb59+7Bt2zZUVlZi7Nix1ccHAE899RT++9//YsOGDUhPT8eFCxfw0EMPVT9++/ZtTJgwAbdu3cLevXuxdu1arFmzBosXL67e5/Tp05gwYQJGjhyJgwcPYsGCBZg1axa2bNni1uNV4q73wCo3N1fyPWjTpo1bjtMeZxy/1e9//3tMnjxZ8XVKSkowduxYdOrUCVlZWXj99dfx/PPP47333nPZsenhruO3+uGHHySff0JCgtOPyRHOOP6srCy0adMG69atw7Fjx/C3v/0NycnJeOutt6r38fZzgJ73wOqOzgECOQ0A4auvvqpO5+bmCgCEo0ePVm+7ffu20Lp1a+H9998XBEEQtmzZIvj5+QnFxcXV+9y4cUMwGAzCtm3bBEEQhJycHAGA8NNPP1Xv8/333wsGg0H45ZdfXHxU+rnq+AVBEDp16iQsX77c5cdwpy5duiQAENLT0wVBEI+lcePGwoYNG6r3OX78uABAyMjIEARBEL777jvBz89PKCoqqt7nnXfeEUJCQoSKigpBEARh0aJFQq9evSSvNXnyZCEpKcnVh+QwV70HO3bsEAAI169fd9/B1EFdjr+2JUuWCLGxsTbb3377baF58+bV74cgCMKf//xnITo62vkHcQdcdfynT58WAAgHDhxwVdGd4k6P3+rJJ58URo4cWZ329nOAEvl74IxzAGt6XKiiogIAYDQaq7f5+fkhICAAu3fvrt7HYDBI5igwGo3w8/Or3icjIwPNmjVD//79q/cZPXo0/Pz8sH//fnccSp046/itXnnl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\n"},"metadata":{}}]},{"cell_type":"code","source":["X = df.drop('Data_value', axis=1)\n","y = df['Data_value']\n","X\n","# print(X.columns)\n","# print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"zEC5fv-GN47b","executionInfo":{"status":"ok","timestamp":1740932807844,"user_tz":480,"elapsed":38,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"4082cb91-f2c4-4841-8905-b00074950213"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Series_reference   Period   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A  1989.03    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A  1989.06    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A  1989.09    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A  1989.12    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A  1990.03    FINAL  Dollars         0   \n","...                 ...      ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  2023.12  REVISED   Number         0   \n","191974       QEMQ.SIAZT  2024.03  REVISED   Number         0   \n","191975       QEMQ.SIAZT  2024.06  REVISED   Number         0   \n","191976       QEMQ.SIAZT  2024.09  REVISED   Number         0   \n","191977       QEMQ.SIAZT  2024.12    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group       Series_title_1  \n","0       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","1       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","2       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","3       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","4       Average Hourly Earnings by Industry (ANZSIC06)...  Forestry and Mining  \n","...                                                   ...                  ...  \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...     Total Paid Hours  \n","\n","[189836 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-ddb991e6-5863-4b19-b630-3cb7525a8ea2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series_reference</th>\n","      <th>Period</th>\n","      <th>STATUS</th>\n","      <th>UNITS</th>\n","      <th>MAGNTUDE</th>\n","      <th>Subject</th>\n","      <th>Group</th>\n","      <th>Series_title_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.03</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.06</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.09</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1989.12</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>1990.03</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2023.12</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.03</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.06</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.09</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>2024.12</td>\n","      <td>FINAL</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>189836 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddb991e6-5863-4b19-b630-3cb7525a8ea2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ddb991e6-5863-4b19-b630-3cb7525a8ea2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ddb991e6-5863-4b19-b630-3cb7525a8ea2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f8b6ecb8-31a7-4e40-b6ad-c02ef71e0eca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f8b6ecb8-31a7-4e40-b6ad-c02ef71e0eca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f8b6ecb8-31a7-4e40-b6ad-c02ef71e0eca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1a5bf368-b30d-42dd-a8c7-a2a594d2ea70\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1a5bf368-b30d-42dd-a8c7-a2a594d2ea70 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler, OneHotEncoder\n","\n","\n","# ---- Step 1: Handle 'Period' column ----\n","X[['Year', 'Month']] = X['Period'].astype(str).str.split('.', expand=True).astype(int)\n","X.drop(columns=['Period'], inplace=True)\n","\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"8eKAfL5bmTXF","executionInfo":{"status":"ok","timestamp":1740932828272,"user_tz":480,"elapsed":591,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"73876391-4bc8-4c5c-ad1d-e3693fa2d5e8"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Series_reference   STATUS    UNITS  MAGNTUDE  \\\n","0           QEMQ.SAAB1A    FINAL  Dollars         0   \n","1           QEMQ.SAAB1A    FINAL  Dollars         0   \n","2           QEMQ.SAAB1A    FINAL  Dollars         0   \n","3           QEMQ.SAAB1A    FINAL  Dollars         0   \n","4           QEMQ.SAAB1A    FINAL  Dollars         0   \n","...                 ...      ...      ...       ...   \n","191973       QEMQ.SIAZT  REVISED   Number         0   \n","191974       QEMQ.SIAZT  REVISED   Number         0   \n","191975       QEMQ.SIAZT  REVISED   Number         0   \n","191976       QEMQ.SIAZT  REVISED   Number         0   \n","191977       QEMQ.SIAZT    FINAL   Number         0   \n","\n","                                  Subject  \\\n","0       Quarterly Employment Survey - QEM   \n","1       Quarterly Employment Survey - QEM   \n","2       Quarterly Employment Survey - QEM   \n","3       Quarterly Employment Survey - QEM   \n","4       Quarterly Employment Survey - QEM   \n","...                                   ...   \n","191973  Quarterly Employment Survey - QEM   \n","191974  Quarterly Employment Survey - QEM   \n","191975  Quarterly Employment Survey - QEM   \n","191976  Quarterly Employment Survey - QEM   \n","191977  Quarterly Employment Survey - QEM   \n","\n","                                                    Group  \\\n","0       Average Hourly Earnings by Industry (ANZSIC06)...   \n","1       Average Hourly Earnings by Industry (ANZSIC06)...   \n","2       Average Hourly Earnings by Industry (ANZSIC06)...   \n","3       Average Hourly Earnings by Industry (ANZSIC06)...   \n","4       Average Hourly Earnings by Industry (ANZSIC06)...   \n","...                                                   ...   \n","191973  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191974  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191975  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191976  Total Paid Hours  Seasonally Adjusted and Tren...   \n","191977  Total Paid Hours  Seasonally Adjusted and Tren...   \n","\n","             Series_title_1  Year  Month  \n","0       Forestry and Mining  1989      3  \n","1       Forestry and Mining  1989      6  \n","2       Forestry and Mining  1989      9  \n","3       Forestry and Mining  1989     12  \n","4       Forestry and Mining  1990      3  \n","...                     ...   ...    ...  \n","191973     Total Paid Hours  2023     12  \n","191974     Total Paid Hours  2024      3  \n","191975     Total Paid Hours  2024      6  \n","191976     Total Paid Hours  2024      9  \n","191977     Total Paid Hours  2024     12  \n","\n","[189836 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f990e7a4-4741-4124-a93d-b26e68032832\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series_reference</th>\n","      <th>STATUS</th>\n","      <th>UNITS</th>\n","      <th>MAGNTUDE</th>\n","      <th>Subject</th>\n","      <th>Group</th>\n","      <th>Series_title_1</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>1989</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>1989</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>1989</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>1989</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>QEMQ.SAAB1A</td>\n","      <td>FINAL</td>\n","      <td>Dollars</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Average Hourly Earnings by Industry (ANZSIC06)...</td>\n","      <td>Forestry and Mining</td>\n","      <td>1990</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>2023</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>2024</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>2024</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>REVISED</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>2024</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>QEMQ.SIAZT</td>\n","      <td>FINAL</td>\n","      <td>Number</td>\n","      <td>0</td>\n","      <td>Quarterly Employment Survey - QEM</td>\n","      <td>Total Paid Hours  Seasonally Adjusted and Tren...</td>\n","      <td>Total Paid Hours</td>\n","      <td>2024</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>189836 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f990e7a4-4741-4124-a93d-b26e68032832')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f990e7a4-4741-4124-a93d-b26e68032832 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f990e7a4-4741-4124-a93d-b26e68032832');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e89d1151-c7de-4b76-a8d2-7660e4880e25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e89d1151-c7de-4b76-a8d2-7660e4880e25')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e89d1151-c7de-4b76-a8d2-7660e4880e25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6b9299dd-ce3c-40f3-a9d2-b3fda9db9cd0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6b9299dd-ce3c-40f3-a9d2-b3fda9db9cd0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# ---- Step 3: Normalize numerical variables ----\n","from sklearn.preprocessing import StandardScaler\n","\n","# Separate numerical and categorical features\n","num_features = ['Year', 'Month', 'MAGNITUDE']  # Keep them numeric\n","cat_features = [col for col in X.columns if col not in num_features]  # The rest\n","\n","# One-Hot Encode Categorical Features\n","X_cat = pd.get_dummies(X[cat_features], drop_first=True)\n","\n","# Scale Numerical Features\n","scaler = StandardScaler()\n","X_num = pd.DataFrame(scaler.fit_transform(X[num_features]), columns=num_features)\n","\n","# Combine them back\n","X_final = pd.concat([X_num, X_cat], axis=1)\n","\n","print(X_final.dtypes)  # Should have scaled numerical + one-hot categorical\n","\n","\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"r1hJef1dnsWL","executionInfo":{"status":"error","timestamp":1740932831324,"user_tz":480,"elapsed":361,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"45dd7a34-9d88-41d1-bca3-b65b35a96ee6"},"execution_count":13,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"\"['MAGNITUDE'] not in index\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-0b975d313d10>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# Scale Numerical Features\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mscaler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mStandardScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0mX_num\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnum_features\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_features\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;31m# Combine them back\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4106\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4107\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4108\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4110\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6198\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6200\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6202\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6250\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6251\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6252\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{not_found} not in index\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6254\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0moverload\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['MAGNITUDE'] not in index\""]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"akHGGzDKnuaO","executionInfo":{"status":"error","timestamp":1740932724176,"user_tz":480,"elapsed":9625,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"c81e1746-697d-4501-827c-95f1cd81a308"},"execution_count":17,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"\"['MAGNITUDE'] not in index\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-0b975d313d10>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# Scale Numerical Features\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mscaler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mStandardScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0mX_num\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnum_features\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_features\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;31m# Combine them back\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4106\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4107\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4108\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4110\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6198\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6200\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6202\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6250\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6251\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6252\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{not_found} not in index\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6254\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0moverload\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['MAGNITUDE'] not in index\""]}]},{"cell_type":"code","source":["# Convert boolean columns to integers (0/1) for PCA\n","X = X.astype(int)\n","\n","# ---- Final Scaled & Encoded Features ----\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"Evdz7FOKnx33","executionInfo":{"status":"ok","timestamp":1740932581519,"user_tz":480,"elapsed":2538,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"c63ef037-49c9-4fe5-b97e-756079ac2f6c"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        MAGNTUDE  Year  Month  Series_reference_QEMQ.SAAB1B  \\\n","0              0     0      0                             0   \n","1              0     0      0                             0   \n","2              0     0      0                             0   \n","3              0     0      1                             0   \n","4              0     0      0                             0   \n","...          ...   ...    ...                           ...   \n","191973         0     0      1                             0   \n","191974         0     1      0                             0   \n","191975         0     1      0                             0   \n","191976         0     1      0                             0   \n","191977         0     1      1                             0   \n","\n","        Series_reference_QEMQ.SAAB1Z  Series_reference_QEMQ.SAAB2A  \\\n","0                                  0                             0   \n","1                                  0                             0   \n","2                                  0                             0   \n","3                                  0                             0   \n","4                                  0                             0   \n","...                              ...                           ...   \n","191973                             0                             0   \n","191974                             0                             0   \n","191975                             0                             0   \n","191976                             0                             0   \n","191977                             0                             0   \n","\n","        Series_reference_QEMQ.SAAB2B  Series_reference_QEMQ.SAAB2Z  \\\n","0                                  0                             0   \n","1                                  0                             0   \n","2                                  0                             0   \n","3                                  0                             0   \n","4                                  0                             0   \n","...                              ...                           ...   \n","191973                             0                             0   \n","191974                             0                             0   \n","191975                             0                             0   \n","191976                             0                             0   \n","191977                             0                             0   \n","\n","        Series_reference_QEMQ.SAAB9A  Series_reference_QEMQ.SAAB9B  ...  \\\n","0                                  0                             0  ...   \n","1                                  0                             0  ...   \n","2                                  0                             0  ...   \n","3                                  0                             0  ...   \n","4                                  0                             0  ...   \n","...                              ...                           ...  ...   \n","191973                             0                             0  ...   \n","191974                             0                             0  ...   \n","191975                             0                             0  ...   \n","191976                             0                             0  ...   \n","191977                             0                             0  ...   \n","\n","        Series_title_1_Public Sector  \\\n","0                                  0   \n","1                                  0   \n","2                                  0   \n","3                                  0   \n","4                                  0   \n","...                              ...   \n","191973                             0   \n","191974                             0   \n","191975                             0   \n","191976                             0   \n","191977                             0   \n","\n","        Series_title_1_Rental, Hiring and Real Estate Services  \\\n","0                                                       0        \n","1                                                       0        \n","2                                                       0        \n","3                                                       0        \n","4                                                       0        \n","...                                                   ...        \n","191973                                                  0        \n","191974                                                  0        \n","191975                                                  0        \n","191976                                                  0        \n","191977                                                  0        \n","\n","        Series_title_1_Retail Trade  Series_title_1_Total All Industries  \\\n","0                                 0                                    0   \n","1                                 0                                    0   \n","2                                 0                                    0   \n","3                                 0                                    0   \n","4                                 0                                    0   \n","...                             ...                                  ...   \n","191973                            0                                    0   \n","191974                            0                                    0   \n","191975                            0                                    0   \n","191976                            0                                    0   \n","191977                            0                                    0   \n","\n","        Series_title_1_Total All Sectors  Series_title_1_Total Gross Earnings  \\\n","0                                      0                                    0   \n","1                                      0                                    0   \n","2                                      0                                    0   \n","3                                      0                                    0   \n","4                                      0                                    0   \n","...                                  ...                                  ...   \n","191973                                 0                                    0   \n","191974                                 0                                    0   \n","191975                                 0                                    0   \n","191976                                 0                                    0   \n","191977                                 0                                    0   \n","\n","        Series_title_1_Total Paid Hours  Series_title_1_Total Size of Firm  \\\n","0                                     0                                  0   \n","1                                     0                                  0   \n","2                                     0                                  0   \n","3                                     0                                  0   \n","4                                     0                                  0   \n","...                                 ...                                ...   \n","191973                                1                                  0   \n","191974                                1                                  0   \n","191975                                1                                  0   \n","191976                                1                                  0   \n","191977                                1                                  0   \n","\n","        Series_title_1_Transport, Postal and Warehousing  \\\n","0                                                      0   \n","1                                                      0   \n","2                                                      0   \n","3                                                      0   \n","4                                                      0   \n","...                                                  ...   \n","191973                                                 0   \n","191974                                                 0   \n","191975                                                 0   \n","191976                                                 0   \n","191977                                                 0   \n","\n","        Series_title_1_Wholesale Trade  \n","0                                    0  \n","1                                    0  \n","2                                    0  \n","3                                    0  \n","4                                    0  \n","...                                ...  \n","191973                               0  \n","191974                               0  \n","191975                               0  \n","191976                               0  \n","191977                               0  \n","\n","[189836 rows x 1427 columns]"],"text/html":["\n","  <div id=\"df-0ff4cb24-7018-4330-a26c-e2ec0b7caff6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MAGNTUDE</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Series_reference_QEMQ.SAAB1B</th>\n","      <th>Series_reference_QEMQ.SAAB1Z</th>\n","      <th>Series_reference_QEMQ.SAAB2A</th>\n","      <th>Series_reference_QEMQ.SAAB2B</th>\n","      <th>Series_reference_QEMQ.SAAB2Z</th>\n","      <th>Series_reference_QEMQ.SAAB9A</th>\n","      <th>Series_reference_QEMQ.SAAB9B</th>\n","      <th>...</th>\n","      <th>Series_title_1_Public Sector</th>\n","      <th>Series_title_1_Rental, Hiring and Real Estate Services</th>\n","      <th>Series_title_1_Retail Trade</th>\n","      <th>Series_title_1_Total All Industries</th>\n","      <th>Series_title_1_Total All Sectors</th>\n","      <th>Series_title_1_Total Gross Earnings</th>\n","      <th>Series_title_1_Total Paid Hours</th>\n","      <th>Series_title_1_Total Size of Firm</th>\n","      <th>Series_title_1_Transport, Postal and Warehousing</th>\n","      <th>Series_title_1_Wholesale Trade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>191973</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>191974</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>191975</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>191976</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>191977</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>189836 rows × 1427 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ff4cb24-7018-4330-a26c-e2ec0b7caff6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ff4cb24-7018-4330-a26c-e2ec0b7caff6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ff4cb24-7018-4330-a26c-e2ec0b7caff6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1f261788-6e21-429f-abd4-d663f70410df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f261788-6e21-429f-abd4-d663f70410df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1f261788-6e21-429f-abd4-d663f70410df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_56834a4e-7330-4bed-9240-42540bf3205e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_56834a4e-7330-4bed-9240-42540bf3205e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","\n","# Reduce dimensions before plotting\n","pca = PCA(n_components=20)  # Reduce to 20 principal components\n","X_pca = pca.fit_transform(X)\n","\n","plt.figure(figsize=(12, 6))\n","sns.boxplot(data=pd.DataFrame(X_pca))\n","plt.xticks(rotation=45)\n","plt.title(\"Boxplot of PCA Components\")\n","plt.show()"],"metadata":{"id":"in4fpqwspdF9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sampled_columns = np.random.choice(X.columns, size=20, replace=False)\n","X_sample = X[sampled_columns]\n","\n","plt.figure(figsize=(12, 6))\n","sns.boxplot(data=X_sample)\n","plt.xticks(rotation=45)\n","plt.title(\"Boxplot of Sampled Features\")\n","plt.show()"],"metadata":{"id":"MVgMbSn0kVFd","colab":{"base_uri":"https://localhost:8080/","height":919},"executionInfo":{"status":"error","timestamp":1740932216276,"user_tz":480,"elapsed":10387,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"432b81da-5a45-490e-9de3-f79d0ecdfe33"},"execution_count":19,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36mcategorical_order\u001b[0;34m(vector, order)\u001b[0m\n\u001b[1;32m   1767\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1768\u001b[0;31m                 \u001b[0morder\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvector\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcategories\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1769\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   6298\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6299\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6300\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/accessor.py\u001b[0m in \u001b[0;36m__get__\u001b[0;34m(self, obj, cls)\u001b[0m\n\u001b[1;32m    223\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 224\u001b[0;31m         \u001b[0maccessor_obj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    225\u001b[0m         \u001b[0;31m# Replace the property with the accessor object. Inspired by:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/arrays/categorical.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data)\u001b[0m\n\u001b[1;32m   2897\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2898\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2899\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/arrays/categorical.py\u001b[0m in \u001b[0;36m_validate\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m   2906\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCategoricalDtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2907\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Can only use .cat accessor with a 'category' dtype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2908\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: Can only use .cat accessor with a 'category' dtype","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-782c3f40f789>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX_sample\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxticks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrotation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m45\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Boxplot of Sampled Features\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mboxplot\u001b[0;34m(data, x, y, hue, order, hue_order, orient, color, palette, saturation, fill, dodge, width, gap, whis, linecolor, linewidth, fliersize, hue_norm, native_scale, log_scale, formatter, legend, ax, **kwargs)\u001b[0m\n\u001b[1;32m   1624\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1625\u001b[0m     \u001b[0msaturation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msaturation\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mfill\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1626\u001b[0;31m     \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_hue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue_order\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue_norm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msaturation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1627\u001b[0m     color = _default_color(\n\u001b[1;32m   1628\u001b[0m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfill_between\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36mmap_hue\u001b[0;34m(self, palette, order, norm, saturation)\u001b[0m\n\u001b[1;32m    836\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    837\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmap_hue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 838\u001b[0;31m         \u001b[0mmapping\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mHueMapping\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    839\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hue_map\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmapping\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    840\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, plotter, palette, order, norm, saturation)\u001b[0m\n\u001b[1;32m    148\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m                 \u001b[0mcmap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnorm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m                 levels, lookup_table = self.categorical_mapping(\n\u001b[0m\u001b[1;32m    151\u001b[0m                     \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m                 )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36mcategorical_mapping\u001b[0;34m(self, data, palette, order)\u001b[0m\n\u001b[1;32m    222\u001b[0m         \u001b[0;31m# -- Identify the order and name of the levels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    223\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 224\u001b[0;31m         \u001b[0mlevels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcategorical_order\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    225\u001b[0m         \u001b[0mn_colors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlevels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    226\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36mcategorical_order\u001b[0;34m(vector, order)\u001b[0m\n\u001b[1;32m   1769\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1770\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1771\u001b[0;31m                 \u001b[0morder\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvector\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1772\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1773\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mvariable_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvector\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"numeric\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36munique\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   2405\u001b[0m         \u001b[0mCategories\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'a'\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;34m'b'\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;34m'c'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2406\u001b[0m         \"\"\"\n\u001b[0;32m-> 2407\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2409\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0moverload\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/base.py\u001b[0m in \u001b[0;36munique\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1023\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1024\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1025\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0malgorithms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique1d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1026\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36munique\u001b[0;34m(values)\u001b[0m\n\u001b[1;32m    399\u001b[0m     \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'a'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'b'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'b'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'a'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'a'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'c'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    400\u001b[0m     \"\"\"\n\u001b[0;32m--> 401\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0munique_with_mask\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    402\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    403\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36munique_with_mask\u001b[0;34m(values, mask)\u001b[0m\n\u001b[1;32m    438\u001b[0m     \u001b[0mtable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhashtable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    439\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 440\u001b[0;31m         \u001b[0muniques\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    441\u001b[0m         \u001b[0muniques\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_reconstruct_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muniques\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moriginal\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moriginal\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0muniques\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)\n","print(X_scaled)"],"metadata":{"id":"6d-B6snckyBr","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1740612491035,"user_tz":480,"elapsed":75,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"ce64163d-ffda-4b1c-dc3a-c9dd5f5a0126"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"Expected a 2-dimensional container but got <class 'pandas.core.series.Series'> instead. Pass a DataFrame containing a single row (i.e. single sample) or a single column (i.e. single feature) instead.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-103-652e797888f4>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecomposition\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mPCA\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscaler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mStandardScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mX_scaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_scaled\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_set_output.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    317\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m         \u001b[0mdata_to_wrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    320\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_to_wrap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m             \u001b[0;31m# only wrap the first output for cross decomposition\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mfit_transform\u001b[0;34m(self, X, y, **fit_params)\u001b[0m\n\u001b[1;32m    916\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0my\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    917\u001b[0m             \u001b[0;31m# fit method of arity 1 (unsupervised transformation)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 918\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mfit_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    919\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    920\u001b[0m             \u001b[0;31m# fit method of arity 2 (supervised transformation)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    892\u001b[0m         \u001b[0;31m# Reset internal state before fitting\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    893\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 894\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpartial_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    895\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    896\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0m_fit_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprefer_skip_nested_validation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1387\u001b[0m                 )\n\u001b[1;32m   1388\u001b[0m             ):\n\u001b[0;32m-> 1389\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfit_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1390\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1391\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mpartial_fit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    928\u001b[0m         \"\"\"\n\u001b[1;32m    929\u001b[0m         \u001b[0mfirst_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"n_samples_seen_\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 930\u001b[0;31m         X = validate_data(\n\u001b[0m\u001b[1;32m    931\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    932\u001b[0m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mvalidate_data\u001b[0;34m(_estimator, X, y, reset, validate_separately, skip_check_array, **check_params)\u001b[0m\n\u001b[1;32m   2942\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2943\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mno_val_X\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mno_val_y\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2944\u001b[0;31m         \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_name\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"X\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2945\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mno_val_X\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mno_val_y\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2946\u001b[0m         \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_writeable, force_all_finite, ensure_all_finite, ensure_non_negative, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[1;32m   1091\u001b[0m                         \u001b[0;34m\"if it contains a single sample.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1092\u001b[0m                     )\n\u001b[0;32m-> 1093\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1094\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1095\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdtype_numeric\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"kind\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkind\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m\"USV\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Expected a 2-dimensional container but got <class 'pandas.core.series.Series'> instead. Pass a DataFrame containing a single row (i.e. single sample) or a single column (i.e. single feature) instead."]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","corr_matrix = X.corr()\n","sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')\n","plt.title(\"Feature Correlation Matrix\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"i9eBBIVUUqVp","executionInfo":{"status":"ok","timestamp":1740608474504,"user_tz":480,"elapsed":997,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"1cbc0f5d-cbae-4548-bc19-e582f50d9561"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["pca = PCA()\n","X_pca = pca.fit_transform(X_scaled)\n","\n","# Explained variance\n","explained_variance = pca.explained_variance_ratio_\n","cumulative_variance = np.cumsum(explained_variance)\n","\n","plt.figure(figsize=(8, 5))\n","plt.plot(range(1, len(cumulative_variance) + 1), cumulative_variance, marker='o')\n","plt.xlabel('Number of Components')\n","plt.ylabel('Cumulative Explained Variance')\n","plt.title('Explained Variance by PCA Components')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"gGUgvHugUw0-","executionInfo":{"status":"ok","timestamp":1740609423705,"user_tz":480,"elapsed":203,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"94fb5e1b-b923-47d9-93b3-15127bdce33a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Assuming 'pca' is your PCA object after fitting it to your data\n","explained_variance = pca.explained_variance_ratio_\n","cumulative_variance = np.cumsum(explained_variance)\n","threshold = 0.80\n","n_components = np.where(cumulative_variance >= threshold)[0][0] + 1\n","\n","print(f\"Number of components to explain at least {threshold*100}% of variance: {n_components}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_8nOtzGLYQc8","executionInfo":{"status":"ok","timestamp":1740609474873,"user_tz":480,"elapsed":12,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"2f0774e9-1f93-494b-d022-9ad81c76af18"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of components to explain at least 80.0% of variance: 5\n"]}]},{"cell_type":"code","source":["# above 5 components = 80% variance explained by\n","pca = PCA(n_components=5)\n","X_pca = pca.fit_transform(X_scaled)\n","print(X_pca)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ueAtWsd5U2LF","executionInfo":{"status":"ok","timestamp":1740608902047,"user_tz":480,"elapsed":63,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"3bd27705-c2f0-4094-acde-e9cd9721dc0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 3.31675081e+00  1.44346263e+00 -1.65739045e-01 -2.15631188e-01\n","   6.93042841e-01]\n"," [ 2.20946492e+00 -3.33392887e-01 -2.02645737e+00 -2.91358318e-01\n","  -2.57654635e-01]\n"," [ 2.51674015e+00  1.03115130e+00  9.82818670e-01  7.24902309e-01\n","  -2.51033118e-01]\n"," [ 3.75706561e+00  2.75637191e+00 -1.76191842e-01  5.67983308e-01\n","  -3.11841591e-01]\n"," [ 1.00890849e+00  8.69830821e-01  2.02668822e+00 -4.09765788e-01\n","   2.98457503e-01]\n"," [ 3.05025392e+00  2.12240111e+00 -6.29395827e-01 -5.15637495e-01\n","  -6.32018734e-01]\n"," [ 2.44908967e+00  1.17485013e+00 -9.77094891e-01 -6.58305046e-02\n","  -1.02776191e+00]\n"," [ 2.05943687e+00  1.60896307e+00  1.46281883e-01 -1.19260801e+00\n","   7.69034938e-02]\n"," [ 2.51087430e+00  9.18070957e-01 -1.77096903e+00  5.62703612e-02\n","  -8.92256977e-01]\n"," [ 2.75362819e+00  7.89437674e-01 -9.84247490e-01  3.49381568e-01\n","  -4.68553076e-01]\n"," [ 3.47973668e+00  1.30233324e+00 -4.22735217e-01  2.68417600e-02\n","  -3.38374778e-01]\n"," [ 1.75475290e+00  6.11977229e-01 -1.19087832e+00 -8.90164338e-01\n","  -7.38572659e-01]\n"," [ 2.11346234e+00  6.75706339e-01 -8.65086426e-01 -3.56438010e-01\n","  -1.20992872e+00]\n"," [ 3.45815682e+00  1.13062988e+00 -1.20427635e+00  1.62458063e-01\n","  -2.02312681e+00]\n"," [ 4.31278391e+00  2.09597558e+00 -1.26391275e+00  3.05773190e-01\n","  -1.02969261e+00]\n"," [ 2.30518820e+00  1.66255173e+00  2.17902616e-01 -1.44059003e+00\n","  -4.69550104e-01]\n"," [ 2.17195527e+00  2.32730534e+00  8.31729866e-01 -9.12601275e-01\n","  -1.14940414e-04]\n"," [ 1.89897118e+00  1.63136888e+00  7.94913792e-01 -1.08238039e+00\n","  -4.38705214e-01]\n"," [ 3.54198508e+00  2.51834367e+00 -4.85458508e-01 -9.10322807e-01\n","  -1.15307934e+00]\n"," [ 2.08452220e+00  1.06113799e+00 -1.64746678e-01  4.84997419e-01\n","   8.82511354e-01]\n"," [ 3.12440254e+00  7.86897106e-01 -3.64887083e-01 -2.55616906e-02\n","   9.72413602e-01]\n"," [ 1.08657007e+00  2.41743551e-01  9.36961600e-01  1.02990984e+00\n","   3.15971695e-01]\n"," [ 2.53522408e+00 -9.18406207e-02 -3.11932659e-01 -4.83912355e-02\n","  -4.29581558e-01]\n"," [ 1.64498834e+00 -5.16278930e-01  1.43885095e-01 -4.13720024e-01\n","  -3.75719965e-01]\n"," [ 1.76157587e+00 -3.17148933e-01  8.90285647e-01 -1.15115611e-01\n","  -5.56668422e-01]\n"," [ 9.90079102e-01  9.40667338e-01  3.82090801e+00 -1.32156120e+00\n","   1.59004709e-01]\n"," [ 1.77527763e+00  6.86175134e-01 -8.67004065e-02 -2.32906780e-01\n","  -1.14294269e+00]\n"," [ 1.23542396e+00 -8.98070414e-02 -1.38689654e+00 -4.95682720e-01\n","  -3.75941399e-01]\n"," [ 2.18840633e+00  6.89569621e-01  1.39456688e+00 -7.77491811e-01\n","  -8.10584069e-01]\n"," [ 2.25610898e+00  1.91461937e-01 -1.09265726e+00  2.86152299e-01\n","  -4.83073257e-01]\n"," [ 2.50022003e+00  1.24083383e+00  1.38601785e+00 -3.66865220e-01\n","  -6.22332864e-01]\n"," [ 2.67741105e+00  1.47187365e+00 -3.32261728e-01 -3.49353875e-01\n","  -8.65943288e-02]\n"," [ 1.62857912e+00  5.27044506e-02 -1.67128706e-01 -7.49314246e-01\n","  -6.36062749e-01]\n"," [ 1.90269086e+00  1.63306043e+00  1.17208212e+00 -2.34042904e+00\n","  -1.86814052e-01]\n"," [ 1.41038853e+00  6.97934325e-01  4.79743025e-01 -1.06008622e+00\n","   9.91607444e-02]\n"," [ 1.90382623e+00  1.76710951e-01  4.50835040e-01  2.84113552e-01\n","  -1.62949445e-01]\n"," [ 1.38486223e+00  6.58639854e-01  4.58438581e-01 -1.28465815e+00\n","  -2.05011590e-01]\n"," [ 1.12220741e+00  1.14109760e-01 -3.91072767e-02 -9.56401223e-01\n","  -3.42211235e-01]\n"," [ 1.50219450e+00 -7.69432006e-01 -1.42617735e+00 -7.57508093e-01\n","  -1.65844135e-01]\n"," [ 2.52980109e+00  1.80300198e+00 -3.43152389e-01  1.18697430e+00\n","   1.29789571e+00]\n"," [ 2.58809543e+00  7.79616304e-01 -1.18477466e-01  4.75971440e-01\n","   4.03322016e-01]\n"," [ 6.68481994e-01  1.69960941e-01 -7.83362548e-01  1.31308378e+00\n","  -3.71763418e-01]\n"," [ 3.07080699e+00  1.15591896e+00 -3.12758084e-01  5.50284635e-01\n","  -3.04125653e-01]\n"," [ 4.62209138e-01  3.30742132e-01 -2.01476496e-01  1.43649386e+00\n","   2.83224877e-01]\n"," [ 2.10135193e+00 -7.10089210e-02 -6.55849415e-01  7.57744839e-01\n","   4.71537726e-01]\n"," [ 1.13616618e+00  1.77710739e+00  2.87057358e-02  6.91831212e-01\n","  -6.09242058e-02]\n"," [ 2.72660096e+00  1.19133469e+00 -5.39773261e-01  1.38955067e+00\n","  -4.96894588e-01]\n"," [ 2.82133927e+00  6.46258599e-01 -1.15555241e+00  9.87662912e-01\n","  -9.97701769e-03]\n"," [ 2.00985085e+00  1.24702946e+00 -5.72939879e-02  2.30643107e-01\n","  -3.84651070e-01]\n"," [ 2.70749130e+00  1.75196741e+00 -6.43113612e-01 -1.00231520e-01\n","  -4.94713032e-01]\n"," [ 3.21491747e+00  1.66991995e-01 -1.97357168e+00  1.12068394e+00\n","   1.22781973e-02]\n"," [ 2.85895983e+00  7.45278804e-01  4.71950216e-03 -2.15276557e-01\n","  -7.58808494e-01]\n"," [ 3.50560436e+00  1.61273386e+00 -5.20774530e-01  1.06536424e-01\n","  -6.01684444e-01]\n"," [ 2.22479138e+00  1.87516800e+00  3.39549850e-01 -1.20696658e+00\n","  -5.76644249e-01]\n"," [ 2.14698782e+00  1.01675154e+00 -9.57762762e-01 -2.40318190e-01\n","   8.80104504e-01]\n"," [ 2.46932948e+00  1.32900831e+00  5.13437453e-01  2.55348621e-01\n","   9.12140102e-01]\n"," [ 2.74151791e+00  1.43654878e+00 -6.12473396e-01  2.05747441e-01\n","   4.34263863e-01]\n"," [ 2.17374092e+00  1.21219984e+00  2.61779593e-01 -5.04426086e-01\n","  -6.95421813e-01]\n"," [ 3.13938015e+00  1.73157912e+00 -2.85661413e-01  2.30567212e-01\n","   7.50408361e-02]\n"," [-9.28581969e-01 -3.07348616e+00 -4.58506401e+00 -1.05184439e+00\n","   4.57124124e-01]\n"," [-1.54248014e+00 -1.38144351e+00 -8.74683112e-01 -2.89011975e+00\n","  -9.78008325e-01]\n"," [-1.83624976e+00 -8.29984123e-01 -1.60570219e+00 -1.45210485e+00\n","  -2.94075797e-01]\n"," [ 3.06068341e-02 -1.26278614e+00 -1.78440801e+00 -1.20657607e+00\n","  -3.93604322e-01]\n"," [ 2.05026161e+00 -1.92503260e+00 -7.36877735e-03  7.21321903e-01\n","  -8.11266485e-02]\n"," [-6.09680827e-01 -1.90805881e+00  6.79357938e-01 -2.15307609e+00\n","  -4.99025512e-02]\n"," [ 9.00227839e-01 -7.63911474e-01  5.73361302e-01 -6.79361634e-01\n","  -1.42633049e-01]\n"," [ 2.24850719e+00 -1.88459248e+00 -2.03184019e+00  1.40762723e+00\n","  -7.32006956e-01]\n"," [ 1.83384027e-01 -2.42714611e+00 -1.06974556e+00  1.27417972e-01\n","  -5.34573559e-01]\n"," [-8.12805027e-01 -2.20513987e-01 -7.07005396e-01 -2.48898958e+00\n","  -5.83559831e-01]\n"," [ 1.97562050e+00 -1.40328323e+00 -1.23827622e+00 -1.15230649e+00\n","   4.18665674e+00]\n"," [-1.57221622e+00 -8.84983137e-01 -6.28997950e-01 -1.17184641e+00\n","   9.65344570e-01]\n"," [ 1.65768181e+00 -9.56712197e-01  1.95258422e+00  1.52208912e-01\n","  -7.87161183e-01]\n"," [-7.25372388e-01 -1.06364540e+00  8.03322286e-02 -7.60194312e-02\n","  -1.80165770e-01]\n"," [ 2.56222717e+00  2.60198551e-01  3.37439396e+00 -9.79399432e-01\n","   1.98079860e+00]\n"," [ 1.83256757e+00 -1.28787820e+00  4.58280027e-01  1.71350754e-01\n","   1.00122223e+00]\n"," [-8.67992903e-01 -2.44410119e+00 -1.56333318e+00 -8.31459859e-01\n","   7.07979981e-01]\n"," [ 3.70014404e-01 -2.15390698e+00 -2.44938635e+00 -1.26159044e-01\n","   9.52998423e-02]\n"," [-1.45737704e+00 -1.38335177e+00 -2.27306902e-01 -6.96356870e-01\n","   1.06736218e+00]\n"," [ 1.26293085e+00 -7.70849530e-01 -1.18422452e+00 -9.25882244e-01\n","   2.61359304e+00]\n"," [ 3.76150372e-01 -1.02704340e+00  1.79446629e+00  9.78544527e-01\n","  -1.36569188e-01]\n"," [ 7.62063904e-01 -3.37505381e+00 -3.57470056e-01 -3.66732915e-01\n","  -1.54440573e-01]\n"," [ 1.03457797e+00 -1.45070974e+00 -3.63011773e-01  2.96595780e-01\n","  -3.05887237e-01]\n"," [-4.94876756e-01 -2.38124353e+00  1.33574318e+00 -1.04097884e+00\n","  -1.04212663e+00]\n"," [-2.53897708e+00 -8.74433573e-02  4.74251393e-01  7.58601454e-01\n","  -1.12781648e+00]\n"," [ 8.35320145e-01 -1.47367055e+00  6.10093576e-01  5.82951878e-01\n","   8.99184784e-01]\n"," [ 7.87904615e-01 -2.02662652e+00 -2.54723404e-01 -8.09418080e-01\n","   2.58852542e-01]\n"," [-8.06832156e-01 -2.23383039e+00  7.72855797e-01 -1.01371575e+00\n","  -2.91862299e-01]\n"," [-5.58042625e-01 -2.37298543e+00  2.30761140e+00 -1.03532031e+00\n","  -4.76939508e-01]\n"," [-1.11511104e+00 -1.80224719e+00  9.59253308e-01 -3.31283791e-01\n","  -7.31510062e-01]\n"," [-5.55722830e-01 -2.65754004e+00  8.49126898e-01 -3.19764133e-03\n","  -1.34625700e+00]\n"," [-1.34928528e+00 -2.11800147e+00 -4.76523208e-02 -4.66250567e-01\n","  -8.90545973e-01]\n"," [-1.56448261e+00 -1.85221452e+00  7.81067031e-01 -6.05079391e-01\n","  -5.16465365e-01]\n"," [-1.93255561e+00 -1.55949546e+00 -8.92746761e-02 -5.22569357e-01\n","  -1.17369757e+00]\n"," [ 7.46665942e-01 -2.31293171e+00  1.14679769e-01  1.24853870e+00\n","   2.62936875e-01]\n"," [ 9.57455364e-01 -2.22352843e+00  1.42444774e-01  3.14042947e-01\n","   9.44142712e-01]\n"," [ 2.54386518e+00  1.69274023e-01  7.88696991e-01 -1.03283704e+00\n","   3.73107921e+00]\n"," [-5.43952589e-01 -3.68926546e-01  1.30889593e+00 -1.27799856e+00\n","   3.34679072e+00]\n"," [ 1.03104975e+00 -2.56556935e+00 -1.08639017e+00  2.63860985e-01\n","  -1.89844015e-01]\n"," [ 2.25190942e+00 -1.43274138e+00 -2.30208244e-01  9.21171097e-01\n","  -2.39922932e-01]\n"," [ 1.41021602e+00 -2.16619177e+00  7.48896411e-01  1.19561119e+00\n","  -7.09857212e-01]\n"," [ 7.97719793e-01 -2.37694880e+00 -1.56811253e+00 -3.48163602e-02\n","   6.17091397e-01]\n"," [-5.49531727e-01 -2.29312864e+00 -1.49893532e+00 -3.07038671e-01\n","   3.26010934e-01]\n"," [-1.61173740e-01 -1.16448332e+00  1.00371310e+00  6.61686224e-01\n","   3.01185142e-01]\n"," [-6.59794942e-01 -2.67996119e+00 -7.64920868e-01  4.69954774e-01\n","   1.44470385e-01]\n"," [ 3.92354408e-01 -2.09873171e+00 -4.71850008e-01  4.37056575e-01\n","  -3.03810455e-01]\n"," [-1.77249908e+00 -1.71728847e+00  9.47033174e-01  2.59512586e-01\n","  -1.00482549e+00]\n"," [-3.66267357e-01 -2.16935330e+00 -4.81324235e-01  3.98400462e-01\n","  -4.69051314e-01]\n"," [-1.62067257e+00 -1.35558339e+00  2.87159001e-01 -2.60245460e-02\n","  -5.69352548e-01]\n"," [ 8.25357835e-02 -2.30623459e+00 -4.63574989e-01  8.90351023e-01\n","   3.40576552e-01]\n"," [ 1.57827507e+00 -1.46203429e+00  1.77964595e+00  6.13584424e-01\n","   2.87981736e-01]\n"," [ 1.42056925e+00 -1.41820664e+00  1.39275829e-01  3.43053946e+00\n","   2.19688434e+00]\n"," [-2.78702754e-01 -1.93056809e+00  7.86705530e-02  9.28520741e-01\n","   2.61495778e-01]\n"," [-1.30314497e+00 -7.63172314e-01  1.99959651e+00 -1.72583588e+00\n","  -7.34906273e-01]\n"," [-4.57071866e-01 -2.26941561e+00  1.06133897e+00 -8.37432054e-01\n","  -3.23450841e-01]\n"," [-4.94185847e-01 -1.93904505e+00  1.32393807e+00 -6.15972483e-02\n","  -8.48907529e-01]\n"," [ 4.82074410e-01 -3.87178385e+00  1.34427122e+00 -8.99910492e-01\n","  -9.32357726e-01]\n"," [-2.52888878e-01 -2.82149237e+00 -3.02639785e-01  4.57967101e-01\n","   3.71087250e-01]\n"," [-1.07227638e-01 -1.92892204e+00  6.90148243e-01 -2.73722484e-01\n","   1.07109693e+00]\n"," [-2.43301260e+00 -1.25714104e+00 -1.90302740e+00  8.69731905e-01\n","  -4.68142634e-01]\n"," [-5.51089539e-01 -2.22216155e+00 -3.56228830e-01  1.36331989e+00\n","   2.16715598e-01]\n"," [ 7.39621929e-01 -1.40895667e+00  1.12534549e+00  1.20511147e+00\n","   4.29921233e-01]\n"," [ 1.33632173e+00  2.53336931e-01  5.34538818e+00  2.39037513e-01\n","   2.36502548e-01]\n"," [-1.17708700e+00 -6.63966840e-01  3.01022189e+00  1.16613696e+00\n","   3.32728686e-01]\n"," [-4.62335008e-01 -6.18288179e-01  4.83442366e-01  3.57672436e+00\n","   1.28821448e-01]\n"," [ 9.78474079e-01 -1.44557050e+00  1.48123697e+00  3.79033509e+00\n","   4.99810258e-01]\n"," [-9.68097263e-02 -2.10999799e+00  4.34826116e-01  1.05469528e+00\n","  -3.11444426e-01]\n"," [ 3.84871459e-02 -1.26676211e+00  6.87577913e-01  1.27288418e+00\n","  -3.53052180e-01]\n"," [-1.59715850e+00 -1.20814357e+00  3.36117556e+00 -2.19277553e-01\n","  -6.40763433e-01]\n"," [-4.79564916e-01 -1.93884066e+00  1.29650752e+00  6.86976225e-01\n","  -6.04852194e-02]\n"," [-1.79283347e+00 -1.15028810e+00  7.82800173e-01  1.47877897e+00\n","  -5.04217973e-01]\n"," [-1.32710166e+00  1.70389232e-01 -1.18001336e+00 -1.50170981e+00\n","   2.30529033e+00]\n"," [-2.38450083e+00  3.74582606e-01 -7.23822595e-01 -3.08194983e-01\n","   1.33963198e+00]\n"," [-2.93694010e+00  2.63861830e-01 -1.67639816e-01 -4.08773422e-01\n","   1.08780606e+00]\n"," [-2.14681113e+00  3.68254952e-01 -4.53301301e-01  4.85275651e-02\n","   1.72663205e+00]\n"," [-2.36986949e+00 -4.59634809e-01 -1.10139979e+00 -8.56777335e-01\n","  -1.06700654e+00]\n"," [-3.06384157e+00  3.53412835e-01 -1.09912410e+00 -7.40398132e-01\n","  -7.37708034e-01]\n"," [-3.91575378e+00  1.54582519e-01  2.21827800e-01 -9.06832745e-03\n","  -3.62728736e-01]\n"," [-3.93646339e+00  6.59687233e-01  1.71221542e+00  5.45483801e-01\n","  -5.37324815e-01]\n"," [-3.09427612e+00  3.48842759e-01 -1.02683141e+00 -7.13492080e-02\n","  -1.05934986e+00]\n"," [-2.37447163e+00  2.91980352e-01  1.24191433e+00 -7.48805540e-01\n","  -4.15579113e-01]\n"," [-2.77881295e+00  2.86804873e-01  6.09670124e-01 -8.79346886e-01\n","  -5.54423936e-01]\n"," [-2.28656128e+00  3.72507845e-01 -9.71643032e-01 -3.71437736e-01\n","  -3.38092368e-01]\n"," [-2.98563349e+00  4.89217908e-01  9.46952932e-01 -1.03622559e+00\n","  -5.85146743e-01]\n"," [-2.37519470e+00  4.82333717e-01 -2.52883994e-01  6.71149264e-01\n","  -6.28091905e-01]\n"," [-2.20986553e+00  1.16005250e+00 -1.24512523e+00  3.18838188e-01\n","   1.68869340e+00]\n"," [-2.62562100e+00  5.63160764e-01 -8.55961082e-01  2.75684026e-01\n","   6.51112208e-01]\n"," [-4.28063878e+00  6.49670964e-01 -1.45819696e+00  1.12816430e+00\n","  -3.59554250e-01]\n"," [-3.58264137e+00  1.27270275e+00 -1.10784038e-01  1.04990904e+00\n","  -5.23551900e-01]\n"," [-2.80706372e+00  1.57053379e+00 -4.72527935e-01  6.27358450e-01\n","  -2.60172997e-01]\n"," [-2.89965933e+00  2.04105701e+00 -4.95959810e-01  4.71155615e-01\n","   1.43887721e+00]\n"," [-2.32073698e+00  2.35636608e+00  4.37681744e-01 -5.22597755e-02\n","   2.23442719e+00]\n"," [-2.54983095e+00  2.04528309e+00 -3.12267999e-01  3.86971682e-01\n","   1.84752262e+00]\n"," [-1.81254128e+00  1.52764595e+00  1.36258978e+00 -1.89395906e-01\n","   1.74938720e+00]\n"," [-2.76014464e+00  2.13893235e+00 -9.64628688e-01  6.68386112e-01\n","  -4.77041693e-01]\n"," [-2.73715050e+00  4.09886271e-01 -1.19040468e+00 -6.63045204e-01\n","   4.59036777e-01]\n"," [-3.60486887e+00  1.80238422e+00 -9.40368613e-02  1.26884047e+00\n","  -6.09465332e-01]\n"," [-2.88982600e+00  1.92521861e+00 -7.82322556e-01  1.32472540e+00\n","  -5.71242955e-01]\n"," [-3.39215608e+00  1.31187639e+00  1.60202597e+00 -4.82842144e-01\n","  -6.70871384e-01]\n"," [-1.04818190e+00  3.51508969e+00  1.16003857e+00  9.35329394e-01\n","  -8.99448535e-01]\n"," [-1.60991228e+00  2.40663816e+00  5.48559697e-01  7.54309684e-01\n","  -9.95206846e-01]\n"," [-3.14313097e+00  7.38161044e-01 -9.09987239e-02  9.80647845e-01\n","  -4.09813519e-01]\n"," [-2.24015690e+00  1.17546529e+00 -1.01376932e-01 -1.16527872e+00\n","  -2.64449292e-01]\n"," [-2.84767378e+00  5.56043966e-01  8.04215218e-01 -8.97888066e-01\n","  -2.54801317e-01]\n"," [-2.59749706e+00  6.97965537e-01 -8.84939521e-01 -2.74228748e-01\n","   7.72235497e-01]\n"," [-2.94929937e+00  1.55530896e+00 -9.83400727e-01  1.54803469e-02\n","  -3.64082110e-01]\n"," [-3.53003227e+00  8.82526796e-01 -4.66029128e-01  5.80789625e-01\n","  -6.68959720e-01]\n"," [-2.40611054e+00  2.59235618e+00  4.28226211e-01 -1.84335092e-01\n","   4.47661124e-01]\n"," [-2.92908473e+00  1.27444695e+00 -1.21335827e+00  2.95316047e-01\n","  -2.67349928e-01]\n"," [-2.18141278e+00  2.07753731e+00  7.63782552e-01 -3.89593322e-01\n","   3.59873602e-01]\n"," [-2.38092779e+00  2.58866743e+00  1.41804403e+00  5.88501936e-01\n","   1.12799681e+00]\n"," [-3.21161722e+00 -2.51249104e-01 -8.47129152e-01 -2.17065355e-01\n","   6.09095215e-01]\n"," [-3.67791872e+00  8.47747844e-01 -1.33942023e+00 -1.25175865e-01\n","  -4.86111933e-01]\n"," [-2.46555580e+00  2.19379830e+00 -9.18780960e-01  1.80249950e-02\n","  -7.01209522e-01]\n"," [-3.37052415e+00  2.21628914e+00 -3.42569512e-01  1.05852684e+00\n","  -5.74163899e-01]\n"," [-2.60195585e+00  1.75722935e+00  2.07581355e-01  3.49496422e-01\n","   2.55063178e-01]\n"," [-2.67783946e+00  2.76089913e+00 -9.40941877e-01  3.12034746e-01\n","   1.27135500e+00]\n"," [-2.38701709e+00  2.29734668e+00 -5.50696197e-01 -6.88284548e-01\n","   8.13955219e-01]\n"," [-3.20875816e+00  2.76891957e+00  1.01391366e+00  5.96903186e-01\n","  -8.95192588e-01]]\n"]}]},{"cell_type":"code","source":["pca_2d = PCA(n_components=2)\n","X_pca_2d = pca_2d.fit_transform(X_scaled)\n","\n","plt.figure(figsize=(8, 6))\n","sns.scatterplot(x=X_pca_2d[:, 0], y=X_pca_2d[:, 1], hue=y, palette='viridis')\n","plt.xlabel('First Principal Component')\n","plt.ylabel('Second Principal Component')\n","plt.title('PCA of Wine Dataset (2D)')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"SIHqa2wuU9nD","executionInfo":{"status":"ok","timestamp":1740609197701,"user_tz":480,"elapsed":652,"user":{"displayName":"Brian McGauley","userId":"14071277357907673061"}},"outputId":"aa5975f9-9f92-4e71-f8f7-4b6d7f37f772"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"xoxedXgJbe0U"},"execution_count":null,"outputs":[]}]}